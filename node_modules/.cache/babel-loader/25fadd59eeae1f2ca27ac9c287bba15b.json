{"ast":null,"code":"var _jsxFileName = \"/Users/alejandrotaylor/Documents/homevision/src/views/Properties/PropertyList.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from \"react\";\nimport Property from \"./components/Property\";\nimport IntiniteScroll from \"../../components/InfiniteScroll\";\nimport axios from \"axios\";\nimport { createElement as _createElement } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst PropertyList = props => {\n  _s();\n\n  const [properties, setProperties] = useState([]);\n  const [pageNumber, setPageNumber] = useState(1);\n  const [retryCount, setRetryCount] = useState(0);\n  const [isLoading, setIsLoading] = useState(true);\n\n  const getProperties = () => {\n    setIsLoading(true);\n    return axios.get(`http://app-homevision-staging.herokuapp.com/api_project/houses?page=${pageNumber}&per_page=20`).then(response => {\n      setProperties(properties.concat(response.data.houses));\n      setPageNumber(pageNumber + 1); //setIsLoading(false)\n    }).catch(e => {\n      setRetryCount(retryCount + 1);\n      setTimeout(getProperties, 2000);\n    });\n  };\n\n  useEffect(() => {\n    if (properties.length === 0) {\n      getProperties();\n    }\n  }, [properties]);\n  return /*#__PURE__*/_jsxDEV(IntiniteScroll, {\n    getNext: getProperties,\n    children: properties.map(property => /*#__PURE__*/_createElement(Property, { ...property,\n      isLoading: isLoading,\n      key: property.id,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 13\n      }\n    }))\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 35,\n    columnNumber: 13\n  }, this);\n};\n\n_s(PropertyList, \"SOvZfacGu468V1yDIo8Gg/hWg2A=\");\n\n_c = PropertyList;\nexport default PropertyList;\n\nvar _c;\n\n$RefreshReg$(_c, \"PropertyList\");","map":{"version":3,"sources":["/Users/alejandrotaylor/Documents/homevision/src/views/Properties/PropertyList.js"],"names":["React","useEffect","useState","Property","IntiniteScroll","axios","PropertyList","props","properties","setProperties","pageNumber","setPageNumber","retryCount","setRetryCount","isLoading","setIsLoading","getProperties","get","then","response","concat","data","houses","catch","e","setTimeout","length","map","property","id"],"mappings":";;;AAAA,OAAOA,KAAP,IAAeC,SAAf,EAA0BC,QAA1B,QAAyC,OAAzC;AACA,OAAOC,QAAP,MAAqB,uBAArB;AACA,OAAOC,cAAP,MAA2B,iCAA3B;AACA,OAAOC,KAAP,MAAkB,OAAlB;;;;AAEA,MAAMC,YAAY,GAAIC,KAAD,IAAW;AAAA;;AAE5B,QAAM,CAACC,UAAD,EAAaC,aAAb,IAA8BP,QAAQ,CAAC,EAAD,CAA5C;AACA,QAAM,CAACQ,UAAD,EAAaC,aAAb,IAA8BT,QAAQ,CAAC,CAAD,CAA5C;AACA,QAAM,CAACU,UAAD,EAAaC,aAAb,IAA8BX,QAAQ,CAAC,CAAD,CAA5C;AACA,QAAM,CAACY,SAAD,EAAYC,YAAZ,IAA4Bb,QAAQ,CAAC,IAAD,CAA1C;;AAEA,QAAMc,aAAa,GAAG,MAAO;AAEzBD,IAAAA,YAAY,CAAC,IAAD,CAAZ;AAEA,WAAOV,KAAK,CAACY,GAAN,CAAW,uEAAsEP,UAAW,cAA5F,EACNQ,IADM,CACDC,QAAQ,IAAI;AACdV,MAAAA,aAAa,CAAED,UAAU,CAACY,MAAX,CAAkBD,QAAQ,CAACE,IAAT,CAAcC,MAAhC,CAAF,CAAb;AACAX,MAAAA,aAAa,CAACD,UAAU,GAAC,CAAZ,CAAb,CAFc,CAGd;AACH,KALM,EAMNa,KANM,CAMCC,CAAC,IAAI;AACTX,MAAAA,aAAa,CAAED,UAAU,GAAC,CAAb,CAAb;AACAa,MAAAA,UAAU,CAACT,aAAD,EAAgB,IAAhB,CAAV;AACH,KATM,CAAP;AAUH,GAdD;;AAgBAf,EAAAA,SAAS,CAAE,MAAK;AACZ,QAAIO,UAAU,CAACkB,MAAX,KAAsB,CAA1B,EAA4B;AACxBV,MAAAA,aAAa;AAChB;AACJ,GAJQ,EAIN,CAACR,UAAD,CAJM,CAAT;AAMA,sBAAQ,QAAC,cAAD;AACJ,IAAA,OAAO,EAAEQ,aADL;AAAA,cAEHR,UAAU,CAACmB,GAAX,CAAgBC,QAAQ,iBACrB,eAAC,QAAD,OAAcA,QAAd;AAAwB,MAAA,SAAS,EAAEd,SAAnC;AAA8C,MAAA,GAAG,EAAEc,QAAQ,CAACC,EAA5D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADH;AAFG;AAAA;AAAA;AAAA;AAAA,UAAR;AAOH,CApCD;;GAAMvB,Y;;KAAAA,Y;AAsCN,eAAeA,YAAf","sourcesContent":["import React, {useEffect, useState} from \"react\";\nimport Property from \"./components/Property\";\nimport IntiniteScroll from \"../../components/InfiniteScroll\";\nimport axios from \"axios\";\n\nconst PropertyList = (props) => {\n\n    const [properties, setProperties] = useState([]);\n    const [pageNumber, setPageNumber] = useState(1)\n    const [retryCount, setRetryCount] = useState(0);\n    const [isLoading, setIsLoading] = useState(true);\n\n    const getProperties = () =>  {\n\n        setIsLoading(true);\n\n        return axios.get(`http://app-homevision-staging.herokuapp.com/api_project/houses?page=${pageNumber}&per_page=20`)\n        .then(response => {\n            setProperties( properties.concat(response.data.houses));\n            setPageNumber(pageNumber+1);\n            //setIsLoading(false)\n        })\n        .catch( e => {\n            setRetryCount( retryCount+1);\n            setTimeout(getProperties, 2000);\n        } )\n    }\n    \n    useEffect( ()=> {\n        if (properties.length === 0){\n            getProperties();\n        }  \n    }, [properties])\n\n    return (<IntiniteScroll\n        getNext={getProperties}>\n        {properties.map( property => (\n            <Property {...property} isLoading={isLoading} key={property.id}/>\n        )\n            )}\n    </IntiniteScroll>)\n}\n\nexport default PropertyList;"]},"metadata":{},"sourceType":"module"}